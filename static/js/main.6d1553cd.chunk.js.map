{"version":3,"sources":["components/Search/Search.module.scss","components/Header/Header.module.scss","components/Loading/Loading.module.scss","components/Error/Error.module.scss","components/PostList/PostList.module.scss","components/NotFound/NotFound.module.scss","components/TableList/TableList.module.scss","components/Post/Post.module.scss","hooks/useData.ts","components/Search/Search.tsx","components/Header/Header.tsx","components/ViewNavigation/ViewNavigation.tsx","components/Loading/Loading.tsx","components/Error/Error.tsx","hooks/useView.ts","components/Post/index.ts","components/Post/Post.tsx","components/PostList/index.ts","components/PostList/PostList.tsx","components/TableLine/TableLine.tsx","components/TableList/TableList.tsx","hooks/useSingleData.ts","components/CurrentPost/CurrentPost.tsx","pages/home/Home.tsx","pages/about/About.tsx","components/NotFound/NotFound.tsx","components/App/App.tsx","index.tsx","components/App/App.module.scss","components/ViewNavigation/ViewNavigation.module.scss","components/CurrentPost/CurrentPost.module.scss","pages/about/About.module.scss"],"names":["module","exports","options","method","url","params","blacklistFlags","type","amount","useData","useState","postData","setPostData","isLoading","setIsLoading","isError","setIsError","useEffect","axios","request","then","response","data","jokes","catch","error","console","log","Search","props","handleSearch","value","className","classes","searchContainer","placeholder","onChange","search","Header","header","happier","Navigation","isEndOfPage","setIsEndOfPage","viewNavContainerClass","cn","viewNavContainer","hidden","hideNav","document","documentElement","offsetHeight","Math","ceil","window","scrollY","outerHeight","addEventListener","removeEventListener","viewNavButton","to","Loading","loading","Error","useView","fullView","setFullView","Post","category","joke","id","changeViewHandler","postItem","postHeader","postText","postBtnContainer","postButton","onClick","goToPost","slice","PostList","postList","map","post","TableLine","tableRow","tableCell","tableLineBtnContainer","tableBtn","TableList","children","setSortedData","table","cellSpacing","thead","_","sortBy","o","useSingleData","postSingleData","setPostSingleData","idRange","fetchData","a","CurrentPost","useParams","Number","currentPostContainer","postId","style","fontWeight","postCategory","postJoke","Home","sortedData","searchValue","index","element","padding","textAlign","fontSize","path","About","aboutContainer","aboutText","backLinkCotainer","backLink","NotFound","notFound","Layout","main","navLinkContainer","navLink","App","setSearchValue","trim","length","filter","toLowerCase","includes","event","target","welcomeText","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6d1553cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__93zy7\",\"searchContainer\":\"Search_searchContainer__1flEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3QGhy\",\"happier\":\"Header_happier__13H8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__5rMHo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__1j0QV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postList\":\"PostList_postList__9cj4F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"NotFound_notFound__1zZAG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TableList_table__2uQTD\",\"thead\":\"TableList_thead__2os7A\",\"tableCell\":\"TableList_tableCell__1a-Og\",\"tableRow\":\"TableList_tableRow__1N3Bt\",\"tableLineBtnContainer\":\"TableList_tableLineBtnContainer__1wHeB\",\"tableBtn\":\"TableList_tableBtn__1zw3T\",\"goToPost\":\"TableList_goToPost__28G0L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"Post_postItem__3QZxa\",\"postHeader\":\"Post_postHeader__lr-LS\",\"postText\":\"Post_postText__2GD4P\",\"postButton\":\"Post_postButton__gfCgK\",\"postBtnContainer\":\"Post_postBtnContainer__1XqPn\",\"goToPost\":\"Post_goToPost__3bv04\"};","import { useState, useEffect } from 'react';\nimport axios, { AxiosRequestConfig } from 'axios';\n\nimport { Post as PostType } from '../models/post';\n\nconst options: AxiosRequestConfig = {\n  method: 'GET',\n  url: 'https://v2.jokeapi.dev/joke/Any',\n  params: {\n    blacklistFlags: 'nsfw',\n    type: 'single',\n    amount: '10',\n  },\n};\n\nconst useData = (): [PostType[], boolean, boolean] => {\n  const [postData, setPostData] = useState<PostType[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    axios.request(options).then((response) => {\n      setPostData(response.data.jokes);\n      setIsLoading(false);\n    }).catch((error) => {\n      setIsLoading(false);\n      setIsError(true);\n      console.log(error);\n    });\n  }, []);\n\n  return [postData, isLoading, isError];\n};\n\nexport default useData;\n","import React, { FC } from 'react';\n\nimport classes from './Search.module.scss';\n\ntype SearchProps = {\n  handleSearch?: React.ChangeEventHandler<HTMLInputElement>;\n  value: string;\n};\nconst Search: FC<SearchProps> = (props) => {\n  const { handleSearch, value } = props;\n  return (\n    <div className={classes.searchContainer}>\n      <input\n        placeholder=\"Type category here\"\n        value={value}\n        onChange={handleSearch}\n        type=\"text\"\n        className={classes.search}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { FC } from 'react';\n\nimport classes from './Header.module.scss';\n\nconst Header: FC = () => (\n  <header className={classes.header}>\n    Site to make you <span className={classes.happier}>happier</span>\n  </header>\n);\n\nexport default Header;\n","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport classes from './ViewNavigation.module.scss';\n\nconst Navigation: FC = () => {\n  const [isEndOfPage, setIsEndOfPage] = useState(false);\n\n  const viewNavContainerClass = cn({\n    [classes.viewNavContainer]: true,\n    [classes.hidden]: isEndOfPage,\n  });\n\n  useEffect(() => {\n    const hideNav = () => {\n      if ((document.documentElement.offsetHeight <= Math.ceil(window.scrollY) + window.outerHeight)) {\n        setIsEndOfPage(true);\n      } else {\n        setIsEndOfPage(false);\n      }\n    };\n    window.addEventListener('scroll', hideNav);\n    return function cleanUp() {\n      window.removeEventListener('scroll', hideNav);\n    };\n  }, []);\n\n  return (\n    <div className={viewNavContainerClass}>\n      <Link className={classes.viewNavButton} to=\"listView\">List</Link>\n      <Link className={classes.viewNavButton} to=\"tableView\">Table</Link>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React, { FC } from 'react';\n\nimport classes from './Loading.module.scss';\n\nconst Loading: FC = () => <div className={classes.loading}>Loading...</div>;\n\nexport default Loading;\n","import React, { FC } from 'react';\n\nimport classes from './Error.module.scss';\n\nconst Error: FC = () => <div className={classes.error}>Произошла ошибка во время загрузки данных</div>;\n\nexport default Error;\n","import { useState } from 'react';\n\nconst useView = (): [boolean, () => void] => {\n  const [fullView, setFullView] = useState(false);\n\n  const changeViewHandler = () => {\n    setFullView(!fullView);\n  };\n\n  return [fullView, changeViewHandler];\n};\n\nexport default useView;\n","import Post from './Post';\n\nexport default Post;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useView from '../../hooks/useView';\nimport { Post as PostProps } from '../../models/post';\nimport classes from './Post.module.scss';\n\nconst Post: FC<PostProps> = (props) => {\n  const { category, joke, id } = props;\n  const [fullView, changeViewHandler] = useView();\n\n  if (fullView) {\n    return (\n      <div className={classes.postItem}>\n        <h2 className={classes.postHeader}>{category}</h2>\n        <p className={classes.postText}>{joke}</p>\n        <div className={classes.postBtnContainer}>\n          <button\n            className={classes.postButton}\n            type=\"button\"\n            onClick={changeViewHandler}\n          >\n            Show less\n          </button>\n          <Link className={classes.goToPost} to={`${id}`}>Go to post</Link>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className={classes.postItem}>\n      <h2 className={classes.postHeader}>{category}</h2>\n      <p className={classes.postText}>{`${joke.slice(0, 25)}...`}</p>\n      <div className={classes.postBtnContainer}>\n        <button\n          className={classes.postButton}\n          type=\"button\"\n          onClick={changeViewHandler}\n        >\n          Show more\n        </button>\n        <Link className={classes.goToPost} to={`${id}`}>Go to post</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import PostList from './PostList';\n\nexport default PostList;\n","import React, { FC } from 'react';\n\nimport { Post as PostType } from '../../models/post';\nimport Loading from '../Loading';\nimport Error from '../Error';\nimport Post from '../Post';\nimport classes from './PostList.module.scss';\n\ntype PostListProps = {\n  searchValue: string;\n  isError: boolean;\n  isLoading: boolean;\n  postData: PostType[];\n};\n\nconst PostList: FC<PostListProps> = (props) => {\n  const { isError, isLoading, postData } = props;\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  if (isError) {\n    return <Error />;\n  }\n  return (\n    <div className={classes.postList}>\n      {postData?.map((post: PostType) => (\n        <Post key={post.id} {...post} />\n      ))}\n    </div>\n  );\n};\n\nexport default PostList;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useView from '../../hooks/useView';\nimport { Post as PostData } from '../../models/post';\nimport classes from '../TableList/TableList.module.scss';\n\ntype TableLineProps = {\n  data: PostData;\n};\n\nconst TableLine: FC<TableLineProps> = (props) => {\n  const { data } = props;\n  const [fullView, changeViewHandler] = useView();\n\n  return (\n    <tr className={classes.tableRow}>\n      <td className={classes.tableCell}>{data.category}</td>\n      <td className={classes.tableCell}>\n        {fullView && data.joke}\n        {!fullView && `${data.joke.slice(0, 25)}...`}\n        <div className={classes.tableLineBtnContainer}>\n          <button className={classes.tableBtn} type=\"button\" onClick={changeViewHandler}>{fullView ? 'Show less' : 'Show more'}</button>\n          <Link className={classes.goToPost} to={`${data.id}`}>Go to post</Link>\n        </div>\n      </td>\n    </tr>\n  );\n};\n\nexport default TableLine;\n","import _ from 'lodash';\nimport React, { Dispatch, FC, SetStateAction } from 'react';\n\nimport { Post as PostType } from '../../models/post';\nimport Loading from '../Loading';\nimport Error from '../Error';\nimport classes from './TableList.module.scss';\n\ntype TableListProps = {\n  children: React.ReactNode;\n  postData: PostType[];\n  setSortedData: Dispatch<SetStateAction<PostType[]>>;\n  isError: boolean;\n  isLoading: boolean;\n};\n\nconst TableList: FC<TableListProps> = (props) => {\n  const {\n    children, postData, setSortedData, isLoading, isError,\n  } = props;\n\n  const sortCategoryHandler = () => {\n    setSortedData(_.sortBy(postData, (o) => o.category));\n  };\n\n  const sortJokeHandler = () => {\n    setSortedData(_.sortBy(postData, (o) => o.joke));\n  };\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  if (isError) {\n    return <Error />;\n  }\n\n  return (\n    <table className={classes.table} cellSpacing=\"0\">\n      <thead className={classes.thead}>\n        <tr className={classes.tableRow}>\n          <th className={classes.tableCell} onClick={sortCategoryHandler}>\n            Category\n          </th>\n          <th className={classes.tableCell} onClick={sortJokeHandler}>\n            Joke\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {children}\n      </tbody>\n    </table>\n  );\n};\n\nexport default TableList;\n","import { useState, useEffect } from 'react';\nimport axios, { AxiosRequestConfig } from 'axios';\n\nimport { Post as PostType } from '../models/post';\n\nconst useSingleData = (id: undefined | number): [PostType | undefined, boolean, boolean] => {\n  const [postSingleData, setPostSingleData] = useState<PostType>();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const options: AxiosRequestConfig = {\n      method: 'GET',\n      url: 'https://v2.jokeapi.dev/joke/Any',\n      params: {\n        blacklistFlags: 'nsfw',\n        type: 'single',\n        idRange: id,\n      },\n    };\n\n    const fetchData = async () => {\n      await axios.request(options).then((response) => {\n        setPostSingleData(response.data);\n        setIsLoading(false);\n      }).catch((error) => {\n        setIsLoading(false);\n        setIsError(true);\n        console.log(error);\n      });\n    };\n\n    fetchData();\n  }, [id]);\n  return [postSingleData, isLoading, isError];\n};\n\nexport default useSingleData;\n","import React, { FC } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport useSingleData from '../../hooks/useSingleData';\nimport { Post } from '../../models/post';\nimport classes from './CurrentPost.module.scss';\n\ntype CurrentPostProps = {\n  sortedData: Post[];\n};\n\nconst CurrentPost: FC<CurrentPostProps> = () => {\n  const { id } = useParams();\n  const [postSingleData, isLoading, isError] = useSingleData(Number(id));\n\n  return (\n    <div className={classes.currentPostContainer}>\n      <div className={classes.postId}>{`№${id}`}</div>\n      {isLoading && <p style={{ fontWeight: 'bold' }}>Loading</p>}\n      {isError && <p style={{ fontWeight: 'bold' }}>Something went wrong</p>}\n      {!isLoading\n        && !isError && (\n        <>\n          <div className={classes.postCategory}>{postSingleData?.category}</div>\n          <div className={classes.postJoke}>{postSingleData?.joke}</div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CurrentPost;\n","import React, { FC } from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport Navigation from '../../components/ViewNavigation';\nimport PostList from '../../components/PostList';\nimport TableLine from '../../components/TableLine';\nimport TableList from '../../components/TableList';\nimport { Post as PostType } from '../../models/post';\nimport CurrentPost from '../../components/CurrentPost';\n\ntype HomeProps = {\n  isError: boolean;\n  isLoading: boolean;\n  sortedData: PostType[];\n  setSortedData: React.Dispatch<React.SetStateAction<PostType[]>>;\n  searchValue: string;\n};\n\nconst Home: FC<HomeProps> = (props) => {\n  const {\n    isError, isLoading, sortedData, setSortedData, searchValue,\n  } = props;\n\n  return (\n    <>\n      <Navigation />\n      <Routes>\n        <Route\n          index\n          element={(\n            <div style={{ padding: '1rem', textAlign: 'center', fontSize: '17px' }}>\n              <p>Select view</p>\n            </div>\n          )}\n        />\n        <Route\n          path=\"listView\"\n          element={(\n            <PostList\n              isError={isError}\n              isLoading={isLoading}\n              postData={sortedData}\n              searchValue={searchValue}\n            />\n          )}\n        />\n        <Route\n          path=\"tableView\"\n          element={(\n            <TableList\n              isError={isError}\n              isLoading={isLoading}\n              postData={sortedData}\n              setSortedData={setSortedData}\n            >\n              {sortedData?.map((post: PostType) => (\n                <TableLine key={post.id} data={post} />\n              ))}\n            </TableList>\n          )}\n        />\n        <Route path=\"listView/:id\" element={<CurrentPost sortedData={sortedData} />} />\n        <Route path=\"tableView/:id\" element={<CurrentPost sortedData={sortedData} />} />\n      </Routes>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport classes from './About.module.scss';\n\nconst About: FC = () => (\n  <div className={classes.aboutContainer}>\n    <p className={classes.aboutText}>\n      This site was created to make you a little bit happier by make you laughing\n    </p>\n    <div className={classes.backLinkCotainer}>\n      <Link to=\"/\" className={classes.backLink}>Go back</Link>\n    </div>\n  </div>\n);\n\nexport default About;\n","import React, { FC } from 'react';\n\nimport classes from './NotFound.module.scss';\n\nconst NotFound: FC = () => <div className={classes.notFound}>Страница не найдена</div>;\n\nexport default NotFound;\n","import React, { useState, useEffect, ChangeEventHandler } from 'react';\nimport {\n  Link, Outlet, Route, Routes,\n} from 'react-router-dom';\n\nimport { Post as PostType } from '../../models/post';\nimport useData from '../../hooks/useData';\nimport Search from '../Search';\nimport classes from './App.module.scss';\nimport Header from '../Header';\nimport Home from '../../pages/home';\nimport About from '../../pages/about';\nimport NotFound from '../NotFound';\n\ntype LayoutProps = {\n  handleSearch: ChangeEventHandler<HTMLInputElement>;\n  searchValue: string;\n};\n\nconst Layout: React.FC<LayoutProps> = (props) => {\n  const { handleSearch, searchValue } = props;\n  return (\n    <>\n      <Header />\n      <main className={classes.main}>\n        <Search handleSearch={handleSearch} value={searchValue} />\n        <div className={classes.navLinkContainer}>\n          <Link to=\"about\" className={classes.navLink}>About site</Link>\n          <Link to=\"jokes\" className={classes.navLink}>Get some fun</Link>\n        </div>\n        <Outlet />\n      </main>\n    </>\n  );\n};\n\nconst App: React.FC = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [postData, isLoading, isError] = useData();\n  const [sortedData, setSortedData] = useState<PostType[]>([]);\n\n  useEffect(() => {\n    if (searchValue.trim().length > 2) {\n      setSortedData(postData.filter((post) => post.category.toLowerCase().includes(searchValue.toLowerCase())));\n    } else {\n      setSortedData(postData);\n    }\n  }, [searchValue, postData, isError]);\n\n  const handleSearch: ChangeEventHandler<HTMLInputElement> = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/GNIVC\" element={<Layout handleSearch={handleSearch} searchValue={searchValue} />}>\n        <Route\n          index\n          element={(\n            <div className={classes.welcomeText}>\n              <p>{'WELCOME! Please, select \\'Get some fun\\' or you can read about site in \\'About\\''}</p>\n            </div>\n          )}\n        />\n        <Route\n          path=\"jokes/*\"\n          element={(\n            <Home\n              isError={isError}\n              isLoading={isLoading}\n              setSortedData={setSortedData}\n              sortedData={sortedData}\n              searchValue={searchValue}\n            />\n          )}\n        />\n        <Route path=\"about\" element={<About />} />\n        <Route path=\"/*\" element={<NotFound />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default App;\n","import 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLinkContainer\":\"App_navLinkContainer__10lMm\",\"navLink\":\"App_navLink__1pgN6\",\"welcomeText\":\"App_welcomeText__3VUBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewNavContainer\":\"ViewNavigation_viewNavContainer__17G9b\",\"viewNavButton\":\"ViewNavigation_viewNavButton__3XESR\",\"hidden\":\"ViewNavigation_hidden__2z2k4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentPostContainer\":\"CurrentPost_currentPostContainer__1q4TF\",\"postCategory\":\"CurrentPost_postCategory__NMZ21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutText\":\"About_aboutText__2VFRM\",\"backLinkCotainer\":\"About_backLinkCotainer__UYkwY\",\"backLink\":\"About_backLink__3d3ga\"};"],"sourceRoot":""}